# ********RoostGPT********

# Test generated by RoostGPT for test artillery-UI-insights-test using AI Type Open AI and AI Model gpt-4
# 
# Test generated for /status/instructions_post for http method type POST in artillery framework
# RoostTestHash=29c28aa003
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  variables:
    API_HOST: "http://example.com"  # replace with the actual API host
  ensure:
    p99: 200
  plugins:
    expect: {}
  payload:
    path: "status_instructions_post_others.csv"
    fields: ["merchantInstructionIdentification", "creditorAccount.bankCode", "creditorAccount.accountIdentification", "creditorAccount.currency", "creditorAccount.accountSchemeName", "creditorAccount.accountSubType"]
    skipHeader: true
    delimiter: "^|^"
  headers:
    Authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"
    x-fapi-customer-ip-address: "invalid"
    x-fapi-auth-date: "invalid"
    x-fapi-interaction-id: "invalid"
    x-idempotency-key: "invalid"
scenarios:
  - name: "Non-success API requests"
    flow:
      - log: "Starting POST /status/instructions request with invalid headers"
      - post:
          url: "/status/instructions"
          json:
            merchantInstructionIdentification: "{{ merchantInstructionIdentification }}"
            creditorAccount:
              bankCode: "{{ creditorAccount.bankCode }}"
              accountIdentification: "{{ creditorAccount.accountIdentification }}"
              currency: "{{ creditorAccount.currency }}"
              accountSchemeName: "{{ creditorAccount.accountSchemeName }}"
              accountSubType: "{{ creditorAccount.accountSubType }}"
          expect:
            - statusCode: 401
            - hasProperty: "message"
            - equals: ["message", "Unauthorized"]
      - think: 1
      - log: "Starting POST /status/instructions request with invalid URL"
      - post:
          url: "/invalid/url"
          json:
            merchantInstructionIdentification: "{{ merchantInstructionIdentification }}"
            creditorAccount:
              bankCode: "{{ creditorAccount.bankCode }}"
              accountIdentification: "{{ creditorAccount.accountIdentification }}"
              currency: "{{ creditorAccount.currency }}"
              accountSchemeName: "{{ creditorAccount.accountSchemeName }}"
              accountSubType: "{{ creditorAccount.accountSubType }}"
          expect:
            - statusCode: 404
            - hasProperty: "message"
            - equals: ["message", "Not found"]
      - think: 1
