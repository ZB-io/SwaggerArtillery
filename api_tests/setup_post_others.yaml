# ********RoostGPT********

# Test generated by RoostGPT for test artillery-UI-insights-test using AI Type Open AI and AI Model gpt-4
# 
# Test generated for /setup_post for http method type POST in artillery framework
# RoostTestHash=606a0438dd
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "setup_post_others.csv"
    fields:
      - "merchantRequestIdentification"
      - "creditorReference"
      - "ultimateDebtorName"
      - "debtorName"
      - "debtorAccount"
      - "debtorAccount.bankCode"
      - "debtorAccount.accountIdentification"
      - "debtorAccount.currency"
      - "debtorAccount.accountSchemeName"
      - "debtorAccount.accountSubType"
      - "creditorName"
      - "creditorAccount"
      - "creditorAccount.bankCode"
      - "creditorAccount.accountIdentification"
      - "creditorAccount.currency"
      - "creditorAccount.accountSchemeName"
      - "creditorAccount.accountSubType"
      - "debtorPrivateIdentification"
      - "debtorPrivateIdentificationSchemeName"
      - "debtorMobileNumber"
      - "maximumAmountCurrency"
      - "maximumAmount"
      - "occurrences"
      - "occurrences.frequencyType"
      - "occurrences.durationFromDate"
      - "occurrences.durationToDate"
      - "otpHoldIndicator"
      - "smsLanguageCode"
    skipHeader: true
    delimiter: "^|^"
  phases:
    - duration: 60
      arrivalRate: 20
scenarios:
  - name: "POST /setup - Failure Cases"
    flow:
      - log: "Performing POST request to /setup with invalid payload"
      - post:
          url: "/setup"
          headers:
            Authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"
            x-fapi-customer-ip-address: "invalid_ip"
            x-fapi-auth-date: "invalid_date"
            x-fapi-interaction-id: "invalid_id"
            x-idempotency-key: "invalid_key"
          json:
            merchantRequestIdentification: "{{ merchantRequestIdentification }}"
            creditorReference: "{{ creditorReference }}"
            ultimateDebtorName: "{{ ultimateDebtorName }}"
            debtorName: "{{ debtorName }}"
            debtorAccount: "{{ debtorAccount }}"
            debtorAccount.bankCode: "{{ debtorAccount.bankCode }}"
            debtorAccount.accountIdentification: "{{ debtorAccount.accountIdentification }}"
            debtorAccount.currency: "{{ debtorAccount.currency }}"
            debtorAccount.accountSchemeName: "{{ debtorAccount.accountSchemeName }}"
            debtorAccount.accountSubType: "{{ debtorAccount.accountSubType }}"
            creditorName: "{{ creditorName }}"
            creditorAccount: "{{ creditorAccount }}"
            creditorAccount.bankCode: "{{ creditorAccount.bankCode }}"
            creditorAccount.accountIdentification: "{{ creditorAccount.accountIdentification }}"
            creditorAccount.currency: "{{ creditorAccount.currency }}"
            creditorAccount.accountSchemeName: "{{ creditorAccount.accountSchemeName }}"
            creditorAccount.accountSubType: "{{ creditorAccount.accountSubType }}"
            debtorPrivateIdentification: "{{ debtorPrivateIdentification }}"
            debtorPrivateIdentificationSchemeName: "{{ debtorPrivateIdentificationSchemeName }}"
            debtorMobileNumber: "{{ debtorMobileNumber }}"
            maximumAmountCurrency: "{{ maximumAmountCurrency }}"
            maximumAmount: "{{ maximumAmount }}"
            occurrences: "{{ occurrences }}"
            occurrences.frequencyType: "{{ occurrences.frequencyType }}"
            occurrences.durationFromDate: "{{ occurrences.durationFromDate }}"
            occurrences.durationToDate: "{{ occurrences.durationToDate }}"
            otpHoldIndicator: "{{ otpHoldIndicator }}"
            smsLanguageCode: "{{ smsLanguageCode }}"
          expect:
            - statusCode: 400
            - hasProperty: "error"
      - think: 1
